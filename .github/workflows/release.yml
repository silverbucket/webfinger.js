name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

      - name: Run linting
        run: bun run lint

      - name: Build project
        run: bun run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version
        id: version_bump
        run: |
          npm version ${{ github.event.inputs.release_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.version_bump.outputs.new_version }}

          ðŸš€ Generated with automated release workflow

          Co-Authored-By: GitHub Actions <action@github.com>"

      - name: Create Git tag
        run: git tag -a "v${{ steps.version_bump.outputs.new_version }}" -m "Release v${{ steps.version_bump.outputs.new_version }}"

      - name: Push changes and tags
        run: |
          git push origin ${{ github.ref_name }}
          git push origin "v${{ steps.version_bump.outputs.new_version }}"

      - name: Setup npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to npm
        run: npm publish

      - name: Generate release notes
        id: release_notes
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD | grep -v "^- chore: bump version")
          else
            CHANGELOG="- Initial release"
          fi
          
          cat > release_notes.md << EOF
          ## ðŸš€ What's New
          
          $CHANGELOG
          
          ## ðŸ“¦ Installation
          
          \`\`\`bash
          # Using bun (recommended)
          bun add webfinger.js@${{ steps.version_bump.outputs.new_version }}
          
          # Using npm
          npm install webfinger.js@${{ steps.version_bump.outputs.new_version }}
          
          # Using yarn
          yarn add webfinger.js@${{ steps.version_bump.outputs.new_version }}
          \`\`\`
          
          ## ðŸ”— Links
          
          - [NPM Package](https://www.npmjs.com/package/webfinger.js)
          - [Documentation](https://github.com/silverbucket/webfinger.js#readme)
          - [Live Demo](https://silverbucket.github.io/webfinger.js/demo/)
          EOF

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version_bump.outputs.new_version }}
          release_name: Release v${{ steps.version_bump.outputs.new_version }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Post-release summary
        run: |
          echo "## ðŸŽ‰ Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.current_version.outputs.version }} â†’ ${{ steps.version_bump.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Type**: ${{ github.event.inputs.release_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **NPM**: https://www.npmjs.com/package/webfinger.js/v/${{ steps.version_bump.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Release**: https://github.com/silverbucket/webfinger.js/releases/tag/v${{ steps.version_bump.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY